name: Test Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y mesa-common-dev libx11-dev libasound2-dev libxi-dev
        
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure with CMake
      run: |
        cd build
        cmake ..
        
    - name: Build
      run: |
        cd build
        cmake --build .
        
  test-wasm:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      
    - name: Create build directory
      run: mkdir -p build
      
    - name: Configure with CMake
      run: |
        cd build
        emcmake cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=MinSizeRel ..
        
    - name: Build WASM
      run: |
        cd build
        cmake --build .
        
    - name: Verify build artifacts
      run: |
        cd build
        ls -la
        test -f pacman.html
        test -f pacman.js
        test -f pacman.wasm 